/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.13 react-meetup-dwarf.gltf -t -o ReactMeetupDwarf.tsx 
*/

import * as THREE from 'three'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'
import { useState } from 'react'
import { useSpring, animated } from '@react-spring/three'

type GLTFResult = GLTF & {
  nodes: {
    Curve004: THREE.Mesh
    Curve012: THREE.Mesh
    Curve013: THREE.Mesh
    Curve014: THREE.Mesh
  }
  materials: {
    ['SVGMat.006']: THREE.MeshStandardMaterial
  }
}

export function ReactMeetupDwarf(props: JSX.IntrinsicElements['group']) {
  const { nodes } = useGLTF('/react-meetup-dwarf.gltf') as GLTFResult
  const [active, setActive] = useState(false)
  const { scale, rotateY } = useSpring({ scale: active ? 70 : 50, rotateY: active ? Math.PI * 0.25 : 0 })

  return (
    <animated.group {...props} dispose={null} scale={scale} rotation-y={rotateY} onClick={() => setActive(prevVal => !prevVal)} rotation-x={Math.PI * 0.5}>
      <mesh geometry={nodes.Curve004.geometry}  >
        <meshStandardMaterial color={0xffffff} />
      </mesh>
      <mesh geometry={nodes.Curve012.geometry}  >
        <meshStandardMaterial color={0x00ddb8} />
      </mesh>
      <mesh geometry={nodes.Curve013.geometry}   >
        <meshStandardMaterial color={0x02142d} />
      </mesh>
      <mesh geometry={nodes.Curve014.geometry}   >
        <meshStandardMaterial color={0x02142d} />
      </mesh>
    </animated.group>
  )
}

useGLTF.preload('/react-meetup-dwarf.gltf')
